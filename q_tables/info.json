{
    "table1": {
        "board_size": 6,
        "snake length": 4, 
        "training_function": "random",
        "# of items": 29049,
        "% of positive values": 29.5,
        "win reward": 30,
        "lose penalty": -1,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "trained on the bugged version"
    },
    "table2": {
        "board_size": 6,
        "snake length": 4, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 21647,
        "% of positive values": 55.867,
        "win reward": 15,
        "lose penalty": -1,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "really good"
    },
    "table3": {
        "board_size": 8,
        "snake length": 4, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 81390,
        "% of positive values": 47.0915,
        "win reward": 15,
        "lose penalty": -1,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "really good"
    },
    "table4": {
        "board_size": 8,
        "snake length": 4, 
        "training_function": "random",
        "# of items": 93347,
        "% of positive values": 20.32966182378302,
        "win reward": 15,
        "lose penalty": -1,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "decent"
    },
    "table5": {
        "board size": 4,
        "snake length": 4, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 0,
        "% of positive values": 0,
        "win reward": 9,
        "lose penalty": -2,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "really good"
    },
    "table6": {
        "board size": 4,
        "snake length": 5, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 0,
        "% of positive values": 0,
        "win reward": 9,
        "lose penalty": -2,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "meh"
    },
    "table8": {
        "board size": 4,
        "snake length": 6, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": "???",
        "% of positive values": "???",
        "win reward": 9,
        "lose penalty": -2,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from where it last ended only if it got the fruit",
        "other notes": "meh"
    },
    "table9": {
        "board size": 4,
        "snake length": 4, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 6160,
        "% of positive values": 42.84,
        "win reward": 6,
        "lose penalty": -1,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from a random position",
        "other notes": "very good"
    },
    "table10": {
        "board size": 4,
        "snake length": 5, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 18985,
        "% of positive values": 32.39,
        "win reward": 6,
        "lose penalty": -2,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from a random position",
        "other notes": "very good"
    },
    "table11": {
        "board size": 4,
        "snake length": 6, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": 58498, 
        "% of positive values": 31.30,
        "win reward": 6,
        "lose penalty": -3,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from a random position",
        "other notes": "very good"
    },
    "table12": {
        "board size": 4,
        "snake length": 7, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": "???",
        "% of positive values": "???",
        "win reward": 6,
        "lose penalty": -4,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from a random position, training session ends when dies or gets fruit",
        "other notes": "good but sometimes dies in dead ends"
    },
    "table13": {
        "board size": 4,
        "snake length": 7, 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": "like 16000?",
        "% of positive values": "???",
        "win reward": 9,
        "lose penalty": -3,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "simplified: getting fruit doesnt give extra segments",
        "other training info": "every iteration it starts from a random position",
        "other notes": "for testing new changes, decent but dies in dead ends"
    },
    "table14": {
        "board size": 4,
        "snake length": "6 -> 7", 
        "training_function": "if not in table: random move; if we have any positive, do a random pos one; else do a random move that isnt the negatives if they exist",
        "# of items": "???",
        "% of positive values": "???",
        "win reward": 9,
        "lose penalty": -3,
        "learning rate": 0.3,
        "decay function": "x => max(x - 1) if x > 0, min(x + 1) if x < 0, 0 if x = 0",
        "game type": "base game: getting fruit gives extra segments",
        "other training info": "every iteration it starts from a random position, ends when it gets two fruits",
        "other notes": ""
    }
}